<?php
/**
 * Class {{codeVendorNamespace}}\{{codePackageNamespace}}\Tests\PHPUnit\Framework\UnitTestCase
 *
 * @package {{codeVendorNamespace}}\{{codePackageNamespace}}
 * @license GNU General Public License, version 2
 * @link    {{packageUrl}}
 */

namespace {{codeVendorNamespace}}\{{codePackageNamespace}}\Tests\PHPUnit\Framework;

use PHPUnit\Framework\TestCase;
use Brain\Monkey;

/**
 * Class representing a unit test case.
 */
class UnitTestCase extends TestCase
{

    /**
     * Sets up the environment before each test.
     */
    protected function setUp()
    {
        parent::setUp();
        Monkey\setUp();
    }

    /**
     * Tears down the environment after each test.
     */
    protected function tearDown()
    {
        Monkey\tearDown();
        parent::tearDown();
    }

    /**
     * Asserts that the contents of two un-keyed, single arrays are equal, without accounting for the order of elements.
     *
     * @param array $expected Expected array.
     * @param array $actual   Array to check.
     */
    public static function assertEqualSets($expected, $actual)
    {
        sort($expected);
        sort($actual);
        self::assertEquals($expected, $actual);
    }

    /**
     * Asserts that the contents of two keyed, single arrays are equal, without accounting for the order of elements.
     *
     * @param array $expected Expected array.
     * @param array $actual   Array to check.
     */
    public static function assertEqualSetsWithIndex($expected, $actual)
    {
        ksort($expected);
        ksort($actual);
        self::assertEquals($expected, $actual);
    }
}
